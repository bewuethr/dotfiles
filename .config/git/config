[core]
	# Abbreviate object names
	abbrev = auto
	# Default editor
	editor = vim

[alias]
	# Branches All - get all branches containing the argument in their name
	ba = "!git -P branch --list -i -a \"*$1*\" #"
	# BLame Age - colour git blame by age
	bla = blame --color-by-age --minimal -C -C --abbrev=6 --progress
	# BLame Colour - different colour for repeated author information in blame
	blc = blame --color-lines
	# Delete No Upstream - delete local branches where there is no upstream branch
	dnu = !git branch --format '%(if:equals=)%(upstream)%(then)%(refname:short)%(end)' \
		| xargs --no-run-if-empty git branch --delete --force
	# Delete Stale Branches - delete local branches where the tracking branch is gone
	dsb = !git branch --format '%(if:equals=[gone])%(upstream:track)%(then)%(refname:short)%(end)' \
		| xargs --no-run-if-empty git branch --delete --force
	# Log, No Tags - hide all tags in log
	lnt = log --decorate-refs-exclude='tags/*'
	# Update submodules
	su = submodule update

[branch]
	# Sort branches by committer date, most recent first
	sort = -committerdate

[checkout]
	defaultRemote = origin

[color]
	# Colour when output to terminal
	ui = auto

[color "blame"]
	# Gradient from grey to red for --color-by-age
	highlightRecent = "#586e75,12 month ago,#63696f,11 month ago,\
		#6e6469,10 month ago,#795f63,9 month ago,#845a5d,8 month ago,\
		#8f5557,7 month ago,#9a5052,6 month ago,#a54b4c,5 month ago,\
		#b04646,4 month ago,#bb4140,3 month ago,#c63c3a,2 month ago,\
		#d13734,1 month ago,#dc322f"
	# Use grey to fade out lines with repeated information for --color-lines
	repeatedLines = "#586e75"

[column]
	# For suppored commands, print output in columns when it goes to terminal
	ui = auto

[commit]
	# Show diff when authoring commit message
	verbose = true

[credential "https://github.com"]
	helper = !/usr/bin/gh auth git-credential

[credential "https://gist.github.com"]
	helper = !/usr/bin/gh auth git-credential

[diff]
	# Spend more time on diffing
	algorithm = histogram
	# List submodule commits like "git submodule summary" does
	submodule = log
	# Use vimdiff for diffing
	tool = vimdiff

[fetch]
	# Delete local references on remotes that have deleted those branches
	prune = true
	# Delete local tags that have been deleted on remote
	pruneTags = true
	# Write a commit-graph every time a packfile is downloaded
	writeCommitGraph = true

[filter "expand"]
	# Clean filter to expand tabs to spaces
	clean = expand -i -t 4
	# Smudge filter to unexpand spaces to tabs
	smudge = unexpand -t 4 --first-only

[help]
	autoCorrect = prompt

[icdiff]
	options = --line-numbers --tabsize=4

[init]
	defaultBranch = main

[log]
	# Human readable dates, unless no pager is used
	date = auto:human
	# Solarized colours for --graph
	graphColors = "#dc322f,#859900,#b58900,#268bd2,#d33682,#2aa198,#cb4b16,#6c71c4"
	# Default to --follow for single files
	follow = true

[merge]
	# Show common ancestor code in merge conflicts
	conflictStyle = zdiff3
	# Don't create extra commits for fast-forward merges
	ff = true
	# Use vimdiff for merge conflict resolution
	tool = vimdiff

[mergetool]
	# Don't keep the .orig backup files
	keepBackup = false
	# Don't ask to confirm merge tool
	prompt = false

[pack]
	# Reuse objects from multiple packs instead of just one
	allowPackReuse = multi

[pager]
	diff = diff-highlight | less
	log = diff-highlight | less
	show = diff-highlight | less

[pull]
	# Allow only fast-forward merges when pulling
	ff = only

[push]
	# Assume --set-upstream when no upstream tracking exists for the current
	# branch
	autoSetupRemote = true
	# Don't push if upstream branch name is different
	default = simple
	# Push tags
	followTags = true

[rebase]
	# Automatically squash commits with specially formatted messages into
	# previous commits being rebased
	autoSquash = true
	# Update dependent branches when rebasing
	updateRefs = true

[rerere]
	enabled = true

[status]
	# Show stash count in status
	showStash = true
	# Show submodule summary for "git status"
	submoduleSummary = true

# Local settings
[include]
	path = config_local

# vim:ft=gitconfig
